--------------------------------------------------------------------------------
About
--------------------------------------------------------------------------------

This tool will help you approximate more accurately the transfer
curves used by your in-camera JPEG engine.

This tool does so by analysing both the RAW data and the resulting
JPEG data from your camera.

--------------------------------------------------------------------------------
How to use this tool
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Step 0: Building and knowing the tool
--------------------------------------------------------------------------------

Build the tool:
$ make

I invite you to run:
$ ./dt-curve-tool -h

This will print you the program help message. This will help you understanding
the following paragraphs.

--------------------------------------------------------------------------------
Step 1: Gathering image data to cover the whole tonal range of your camera
--------------------------------------------------------------------------------

You can start profiling your camera very simply. It suffices for you
to have raw files at your disposal, and their corresponding JPEG files.

Let's say you have FILE.RAW (eg: .NEF/.CR2) and FILE.JPG

$ dcraw -6 -W -g 1 1 -w FILE.RAW
$ mv FILE.ppm FILE-raw.ppm

This creates a PPM file, named FILE.ppm, that we rename to FILE-raw.ppm. This
file contains the data from your sensor in a convenient format for dt-curve-tool
to read. This data represents the data used as input by your in camera JPEG
engine.

Let's now convert the JPEG file to the same convenient format:

$ convert FILE.JPG FILE-jpeg.ppm

This creates another PPM file. But this new PPM file contains the data that your
in camera JPEG engine has output.

It is now time to let dt-curve-tool analyse these two files so that it can gather
some statistical data for a later computation of the curves

I suppose dt-curve-tool is in your $PATH. If not, specify its absolute path.

$ dt-curve-tool FILE-raw.ppm FILE-jpeg.ppm

This command loads and analyses the corresponding pixels found in both images. It
writes, to a state file, the correspondance found for each pixel value.

Given the histogram of each photography, you may need to reapeat this operation
multiple times to cover the whole range of values that your camera is able to
capture. There is no exact number of files to be analysed, this all depends on
your camera tonal range, and the scenes being photographed.

The only thing you have to take care, is to point dt-curve-tool to the same save
state file with the option -s (stands for _s_ave state). Let's say you specify
the -s option even on first run like this

$ dt-curve-tool -s ~/tmp/mycamera.dat FILE-raw.ppm FILE-jpeg.ppm

You are then able to accumulate more data for this camera doing something like this

$ dt-curve-tool -s ~/tmp/mycamera.dat FILE-raw2.ppm FILE-jpeg2.ppm
$ dt-curve-tool -s ~/tmp/mycamera.dat FILE-raw3.ppm FILE-jpeg3.ppm
...
$ dt-curve-tool -s ~/tmp/mycamera.dat FILE-rawN.ppm FILE-jpegN.ppm

Beware that dt-curve-tool uses 32bit counters internally to keep track of the number
of times RGB/Lab samples have been encountered. As cameras these days have many pixels
a photo, do not be zealous and do not run the tool on your complete catalog. In the
case too many pixels have been sampled already, an error is printed on the
console and dt-curve-tool refuses to process the image.

It may be smart to pick 20 to 50 pics covering the whole tonal range, no need for
hundreds/thousands/millions of pictures.

It is now time to analyse the data and output the curves.

--------------------------------------------------------------------------------
Step 2: time for analysing and outputing the curves
--------------------------------------------------------------------------------

So you gathered data in ~/tmp/mycamera.dat, that's perfect. Let's compute the
curves now.

$ dt-curve-tool -z -e FILE.RAW -s ~/tmp/mycamera.dat | tee mycameracurves.sh
[this will print you a script on screen and in the mycameracurves.sh file]

Little explanation before trying out the computed curves.

The -z option tells the dt-curve-tool program to read the save state and compute
the curves. The -e option is just a convenient option for pointing dt-curve-tool
to a file containing EXIF data that can provide your camera Model name.

You can generate curves with more or less points to approximate the values
gathered during step 1. See option -n. The tool does not accept more than
20 points maximum. Something between 10 to 16 should be enough.

Feeling adventurous ? Ready to try your curves ?

First backup your dt library:
$ cp ~/.config/darktable/library.db ~/.config/darktable/library.db.bck

Then go on, import the curves:
$ sh mycameracurves.sh

Spawn darktable, and check you got a new curve in the tonecurve module presets
and the basecurve module presets. If you provided the -e option to the final
dt-curve-tool command run, the preset should be named as your camera Model name.
Otherwise, they will be named 'measured basecurve/tonecurve'

--------------------------------------------------------------------------------
Step 3: Applying the curves automatically
--------------------------------------------------------------------------------

Do not hesitate to setup the preset so that it is automatically applied when you
import/edit photos from this camera model.

Use the usual darktable GUI options for that. Either global options preset editor
or the module preset little tiny button once you selected that preset->Edit preset.

--------------------------------------------------------------------------------
Plotting the data for checking validity of data and fit
--------------------------------------------------------------------------------

On final tool invocation (with -z otpion) you may be interested in looking at
what dt-curve-tool munged and analysed for you.

Two GNUPlot scripts are provided in the same source directory to do so. They
suppose default filenames for the basecurve/toncurve data/fit files have been used

$ gnuplot -e ${dt src}/tools/basecurve/gnuplot.tonecurve
$ gnuplot -e ${dt src}/tools/basecurve/gnuplot.basecurve

This generates a basecurve.pdf; resp tonecurve.pdf file with a graph of the 
dathered data and the fitted curves. This can help you measuring how much of
the tonal range your sampling photos have covered.

--------------------------------------------------------------------------------
Limitations
--------------------------------------------------------------------------------

The computed curves are by no mean a way to have the exact same rendering as
your in camera JPEG engine. Many more algorithms are used by your camera to
generate the JPEG. The curves are only one of them.

The tool has some known limitations:
 - it computes RGB basecurve on the sole G channel, though all three channels are
   analysed
 - the tool supposes the JPEG files are sRGB ones. It doesn't know or understands
   about ICC profiles.
 - the tool is happily confused by JPEG files that are portrait rotated, and their
   raw is not. The helper script tries to correct that during the conversion phase
   However that code has been tested on few samples only, it may rotate the data
   incorrectly.

--------------------------------------------------------------------------------
Cheating script for the braves who read the READMEs up to the last bit
--------------------------------------------------------------------------------

A script called dt-curve-tool-helper is provided. It automates most of what has
been documented in this README:
 - if provided a raw only, it tries to use a file named as the raw file but with
   a .JPG or a .jpg extension. If not found it tries to extract the
   embedded JPEG file from the raw (support for Canon and Nikon for now)
 - it converts both the JPEG file and the raw file to PPM format,
 - it launches the analysis by the dt-curve-tool

It even reminds you about the final dt-curve-tool invocation for computing the
curves.

Use dt-curve-tool-helper -h for more information

Enjoy
